name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings
  RUSTDOCFLAGS: --deny warnings
  SLANG_TAG: 2025.18.2

jobs:
  # Check formatting.
  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check
  setup-slang-macos:
    runs-on: macos-latest
    outputs:
      slang-dir: ${{ steps.output-env.outputs.slang-dir }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-slang
        with:
          path: ~/.cache/slang/slang-v${{ env.SLANG_TAG }}-macos
          key: slang-v${{ env.SLANG_TAG }}-macos
      - name: Download slang
        if: steps.cache-slang.outputs.cache-hit != 'true' # Only download on miss
        id: setup
        run: |
          SLANG_DIR=$(./download_slang.sh --os macos-aarch64 --version $SLANG_TAG | grep '^SLANG_DIR=' | cut -d'=' -f2-)
      - name: set output
        id: output-env
        run: |
          echo "slang-dir=/Users/runner/.cache/slang/slang-v${{ env.SLANG_TAG }}-macos" >> $GITHUB_OUTPUT
  setup-slang-linux:
    runs-on: ubuntu-latest
    outputs:
      slang-dir: ${{ steps.output-env.outputs.slang-dir }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache-slang
        with:
          path: /home/runner/.cache/slang/slang-v${{ env.SLANG_TAG }}-linux
          key: slang-v${{ env.SLANG_TAG }}-linux

      - name: Setup Slang
        if: steps.cache-slang.outputs.cache-hit != 'true' # Only download on miss
        id: setup
        run: |
          echo "version=$SLANG_TAG" >> $GITHUB_OUTPUT  # Output for cache key
          ## linux
          SLANG_DIR=$(./download_slang.sh --os linux --version $SLANG_TAG | grep '^SLANG_DIR=' | cut -d'=' -f2-)
          echo "slang-dir=$SLANG_DIR" >> $GITHUB_OUTPUT
      - name: set output
        id: output-env
        run: |
          echo "slang-dir=/home/runner/.cache/slang/slang-v${{ env.SLANG_TAG }}-linux" >> $GITHUB_OUTPUT
  # Run clippy lints.
  clippy:
    needs: setup-slang-linux # Depends on setup-slang
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SLANG_DIR: ${{ needs.setup-slang-linux.outputs.slang-dir }}
      SLANG_CACHE_KEY: slang-v2025.18.2-linux
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Retrieve Cache for Slang
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/slang/slang-v${{ env.SLANG_TAG }}-linux
          key: slang-v${{ env.SLANG_TAG }}-linux

      - name: Populate target directory from cache
        uses: Leafwing-Studios/cargo-cache@v2
        with:
          sweep-cache: true

      - name: Run clippy lints
        run: SLANG_DIR=$SLANG_DIR cargo clippy --locked --workspace --all-targets --features web,desktop,mobile,comptime_checks -- --deny warnings

  # Check documentation.
  doc:
    needs: setup-slang-linux # Depends on setup-slang
    name: Docs
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SLANG_DIR: ${{ needs.setup-slang-linux.outputs.slang-dir }}
      SLANG_CACHE_KEY: slang-v2025.18.2-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Retrieve Cache for Slang
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/slang/slang-v${{ env.SLANG_TAG }}-linux
          key: ${{ env.SLANG_CACHE_KEY }}

      - name: Populate target directory from cache
        uses: Leafwing-Studios/cargo-cache@v2
        with:
          sweep-cache: true

      - name: Check documentation
        run: SLANG_DIR=$SLANG_DIR cargo doc --locked --workspace --features web,desktop,mobile,comptime_checks --document-private-items --no-deps
  # Testing.
  test-linux:
    needs: setup-slang-linux
    name: Tests (linux)
    runs-on: ubuntu-latest
    env:
      SLANG_DIR: ${{ needs.setup-slang-linux.outputs.slang-dir }}
      SLANG_CACHE_KEY: slang-v2025.18.2-linux
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev
      - name: Retrieve Cache for Slang
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/.cache/slang/slang-v${{ env.SLANG_TAG }}-linux
          key: ${{ env.SLANG_CACHE_KEY }}

      - name: Populate target directory from cache
        uses: Leafwing-Studios/cargo-cache@v2
        with:
          sweep-cache: true
      - name: Run Cargo Tests
        run: |
          SLANG_DIR=$SLANG_DIR cargo test --verbose
  test-macos:
    needs: setup-slang-macos
    name: Tests (macos)
    runs-on: macos-latest
    env:
      SLANG_DIR: ${{ needs.setup-slang-macos.outputs.slang-dir }}
      SLANG_CACHE_KEY: slang-v2025.18.2-macos
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Retrieve Cache for Slang
        uses: actions/cache/restore@v4
        with:
          path: /Users/runner/.cache/slang/slang-v${{ env.SLANG_TAG }}-macos
          key: ${{ env.SLANG_CACHE_KEY }}
      - name: Populate target directory from cache
        uses: Leafwing-Studios/cargo-cache@v2
        with:
          sweep-cache: true
      - name: Run Cargo Tests
        run: |
          SLANG_DIR=$SLANG_DIR cargo test --verbose
